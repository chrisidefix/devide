#!/usr/bin/env python
# generated by wxGlade 0.3.2cvs on Tue Dec 16 16:37:27 2003

import wx
import wx.grid
# with the very ugly two lines below, make sure x capture is not used
# this should rather be an ivar of the wxVTKRenderWindowInteractor!
import vtk.wx.wxVTKRenderWindowInteractor
vtk.wx.wxVTKRenderWindowInteractor.WX_USE_X_CAPTURE = 0
from vtk.wx.wxVTKRenderWindowInteractor import wxVTKRenderWindowInteractor
# and this line is to get past a bug in current wxGlade codegen (20031215)
from wx import MenuBar as wxMenuBar

class threedFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: threedFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        self.showControlsButtonId  =  wx.NewId()
        self.button_2 = wx.Button(self.panel_1, self.showControlsButtonId , "Show Controls")
        self.resetCameraButtonId  =  wx.NewId()
        self.resetCameraButton = wx.Button(self.panel_1, self.resetCameraButtonId , "Reset Camera")
        self.resetAllButtonId  =  wx.NewId()
        self.button = wx.Button(self.panel_1, self.resetAllButtonId , "Reset All")
        self.introspectPipelineButtonId  =  wx.NewId()
        self.button_5 = wx.Button(self.panel_1, self.introspectPipelineButtonId , "Introspect")
        self.projectionChoiceId  =  wx.NewId()
        self.projectionChoice = wx.Choice(self.panel_1, self.projectionChoiceId , choices=["Perspective", "Orthogonal"])
        self.threedRWI = wxVTKRenderWindowInteractor(self.panel_1, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: threedFrame.__set_properties
        self.SetTitle("Slice3D Viewer")
        self.SetSize((640, 480))
        self.projectionChoice.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: threedFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_15 = wx.BoxSizer(wx.VERTICAL)
        sizer_15.Add(self.button_2, 0, wx.BOTTOM|wx.EXPAND, 4)
        sizer_15.Add(self.resetCameraButton, 0, wx.BOTTOM|wx.EXPAND, 4)
        sizer_15.Add(self.button, 0, wx.BOTTOM|wx.EXPAND, 4)
        sizer_15.Add(self.button_5, 0, wx.BOTTOM|wx.EXPAND, 4)
        sizer_15.Add(self.projectionChoice, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_15, 0, wx.RIGHT|wx.EXPAND, 4)
        sizer_2.Add(self.threedRWI, 1, wx.EXPAND, 0)
        sizer_8.Add(sizer_2, 1, wx.ALL|wx.EXPAND, 7)
        self.panel_1.SetAutoLayout(1)
        self.panel_1.SetSizer(sizer_8)
        sizer_8.Fit(self.panel_1)
        sizer_8.SetSizeHints(self.panel_1)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

# end of class threedFrame


class orthoViewFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: orthoViewFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_2 = wx.Panel(self, -1)
        self.RWI = wxVTKRenderWindowInteractor(self.panel_2, -1)
        self.closeButtonId  =  wx.NewId()
        self.button_1 = wx.Button(self.panel_2, self.closeButtonId , "Close")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: orthoViewFrame.__set_properties
        self.SetTitle("Ortho View")
        self.SetSize((480, 433))
        self.RWI.SetSize((-1, -1))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: orthoViewFrame.__do_layout
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_5.Add(self.RWI, 1, wx.EXPAND, 0)
        sizer_5.Add(self.button_1, 0, wx.ALIGN_CENTER_HORIZONTAL, 0)
        self.panel_2.SetAutoLayout(1)
        self.panel_2.SetSizer(sizer_5)
        sizer_5.Fit(self.panel_2)
        sizer_5.SetSizeHints(self.panel_2)
        sizer_4.Add(self.panel_2, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_4)
        self.Layout()
        # end wxGlade

# end of class orthoViewFrame


class controlFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: controlFrame.__init__
        kwds["style"] = wx.CAPTION|wx.MINIMIZE_BOX|wx.MAXIMIZE_BOX|wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_3 = wx.Panel(self, -1)
        
        # Menu Bar
        self.frame_4_menubar = wxMenuBar()
        self.SetMenuBar(self.frame_4_menubar)
        self.slicesMenu = wx.Menu()
        self.frame_4_menubar.Append(self.slicesMenu, "&Slices")
        self.pointsMenu = wx.Menu()
        self.frame_4_menubar.Append(self.pointsMenu, "&Points")
        self.objectsMenu = wx.Menu()
        self.frame_4_menubar.Append(self.objectsMenu, "&Objects")
        # Menu Bar end
        self.frame_4_statusbar = self.CreateStatusBar(1)
        self.createSliceComboBox = wx.ComboBox(self.panel_3, -1, choices=["Scapula lateral edge", "Scapula spina", "Axial", "Coronal", "Sagittal"], style=wx.CB_DROPDOWN)
        self.createSliceButtonId  =  wx.NewId()
        self.button_2_2 = wx.Button(self.panel_3, self.createSliceButtonId , "Create Slice")
        self.sliceGrid = wx.grid.Grid(self.panel_3, -1)
        self.label_1_2 = wx.StaticText(self.panel_3, -1, "Cursor at")
        self.sliceCursorText = wx.TextCtrl(self.panel_3, -1, "")
        self.label_4_2 = wx.StaticText(self.panel_3, -1, "Name")
        self.sliceCursorNameCombo = wx.ComboBox(self.panel_3, -1, choices=["Point 1", "Point 2", "Point 3", "Point 4"], style=wx.CB_DROPDOWN)
        self.sliceStoreButtonId  =  wx.NewId()
        self.button_6_2 = wx.Button(self.panel_3, self.sliceStoreButtonId , "Store this point")
        self.pointsGrid = wx.grid.Grid(self.panel_3, -1)
        self.label_5_1 = wx.StaticText(self.panel_3, -1, "When I click on an object in the scene,")
        self.surfacePickActionChoice = wx.Choice(self.panel_3, -1, choices=["do nothing.", "place a point on its surface.", "configure the object.", "show the scalar bar for its input."])
        self.objectsListGrid = wx.grid.Grid(self.panel_3, -1)
        self.voiEnabledCheckBoxId  =  wx.NewId()
        self.voiEnabledCheckBox = wx.CheckBox(self.panel_3, self.voiEnabledCheckBoxId , "VOI extraction:")
        self.label_7 = wx.StaticText(self.panel_3, -1, "Bounds")
        self.voiBoundsText = wx.TextCtrl(self.panel_3, -1, "", style=wx.TE_READONLY)
        self.label_7_1 = wx.StaticText(self.panel_3, -1, "Discrete")
        self.voiExtentText = wx.TextCtrl(self.panel_3, -1, "")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: controlFrame.__set_properties
        self.SetTitle("Slice3D Control")
        self.frame_4_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_4_statusbar_fields = ["All hail the mighty Slice3D Control!"]
        for i in range(len(frame_4_statusbar_fields)):
            self.frame_4_statusbar.SetStatusText(frame_4_statusbar_fields[i], i)
        self.createSliceComboBox.SetSelection(0)
        self.sliceGrid.CreateGrid(2, 3)
        self.sliceGrid.EnableEditing(0)
        self.sliceGrid.EnableDragRowSize(0)
        self.sliceGrid.EnableDragGridSize(0)
        self.sliceGrid.SetSelectionMode(wx.grid.Grid.wxGridSelectRows)
        self.sliceGrid.SetColLabelValue(0, "Slice name")
        self.sliceGrid.SetColLabelValue(1, "Enabled")
        self.sliceGrid.SetColLabelValue(2, "Interaction")
        self.sliceGrid.SetSize((500, 125))
        self.sliceCursorNameCombo.SetSelection(0)
        self.pointsGrid.CreateGrid(2, 3)
        self.pointsGrid.SetRowLabelSize(30)
        self.pointsGrid.EnableEditing(0)
        self.pointsGrid.EnableDragRowSize(0)
        self.pointsGrid.EnableDragGridSize(0)
        self.pointsGrid.SetSelectionMode(wx.grid.Grid.wxGridSelectRows)
        self.pointsGrid.SetColLabelValue(0, "World")
        self.pointsGrid.SetColSize(0, 200)
        self.pointsGrid.SetColLabelValue(1, "Discrete")
        self.pointsGrid.SetColLabelValue(2, "Value")
        self.pointsGrid.SetSize((500, 150))
        self.surfacePickActionChoice.SetSize((200, 34))
        self.surfacePickActionChoice.SetSelection(0)
        self.objectsListGrid.CreateGrid(2, 5)
        self.objectsListGrid.EnableEditing(0)
        self.objectsListGrid.EnableDragRowSize(0)
        self.objectsListGrid.EnableDragGridSize(0)
        self.objectsListGrid.SetSelectionMode(wx.grid.Grid.wxGridSelectRows)
        self.objectsListGrid.SetColLabelValue(0, "Object Name")
        self.objectsListGrid.SetColLabelValue(1, "Colour")
        self.objectsListGrid.SetColLabelValue(2, "Visible")
        self.objectsListGrid.SetColLabelValue(3, "Contour")
        self.objectsListGrid.SetColLabelValue(4, "Motion")
        self.objectsListGrid.SetSize((500, 125))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: controlFrame.__do_layout
        sizer_16 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_20 = wx.StaticBoxSizer(wx.StaticBox(self.panel_3, -1, "Miscellaneous"), wx.VERTICAL)
        sizer_21 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_19 = wx.StaticBoxSizer(wx.StaticBox(self.panel_3, -1, "Objects"), wx.VERTICAL)
        sizer_13 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_17 = wx.StaticBoxSizer(wx.StaticBox(self.panel_3, -1, "Selected Points"), wx.VERTICAL)
        selectedPointsCursorSizer = wx.BoxSizer(wx.HORIZONTAL)
        sizer_18 = wx.StaticBoxSizer(wx.StaticBox(self.panel_3, -1, "Slices"), wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        label_2 = wx.StaticText(self.panel_3, -1, "New slice name:")
        sizer_7.Add(label_2, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_7.Add(self.createSliceComboBox, 1, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_7.Add(self.button_2_2, 0, wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_7.Add(100, 20, 0, 0, 0)
        sizer_18.Add(sizer_7, 0, wx.ALL|wx.EXPAND, 4)
        sizer_18.Add(self.sliceGrid, 1, wx.EXPAND, 4)
        sizer_3.Add(sizer_18, 0, wx.LEFT|wx.RIGHT|wx.TOP, 7)
        selectedPointsCursorSizer.Add(self.label_1_2, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 3)
        selectedPointsCursorSizer.Add(self.sliceCursorText, 1, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        selectedPointsCursorSizer.Add(self.label_4_2, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 3)
        selectedPointsCursorSizer.Add(self.sliceCursorNameCombo, 1, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        selectedPointsCursorSizer.Add(self.button_6_2, 0, wx.EXPAND, 0)
        sizer_17.Add(selectedPointsCursorSizer, 0, wx.ALL|wx.EXPAND, 4)
        sizer_17.Add(self.pointsGrid, 1, wx.EXPAND, 4)
        sizer_3.Add(sizer_17, 0, wx.LEFT|wx.RIGHT|wx.TOP, 7)
        sizer_13.Add(self.label_5_1, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_13.Add(self.surfacePickActionChoice, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_19.Add(sizer_13, 0, wx.ALL, 4)
        sizer_19.Add(self.objectsListGrid, 0, 0, 4)
        sizer_3.Add(sizer_19, 0, wx.LEFT|wx.RIGHT|wx.TOP, 7)
        sizer_21.Add(self.voiEnabledCheckBox, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_21.Add(self.label_7, 0, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        sizer_21.Add(self.voiBoundsText, 1, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        sizer_21.Add(self.label_7_1, 0, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        sizer_21.Add(self.voiExtentText, 1, wx.LEFT|wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 2)
        sizer_20.Add(sizer_21, 0, wx.ALL|wx.EXPAND, 4)
        sizer_3.Add(sizer_20, 0, wx.ALL|wx.EXPAND, 7)
        self.panel_3.SetAutoLayout(1)
        self.panel_3.SetSizer(sizer_3)
        sizer_3.Fit(self.panel_3)
        sizer_3.SetSizeHints(self.panel_3)
        sizer_16.Add(self.panel_3, 0, 0, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_16)
        sizer_16.Fit(self)
        sizer_16.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class controlFrame


class objectAnimationFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: objectAnimationFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_4 = wx.Panel(self, -1)
        self.resetButtonId  =  wx.NewId()
        self.button_3 = wx.Button(self.panel_4, self.resetButtonId , "Reset")
        self.frameSliderId  =  wx.NewId()
        self.frameSlider = wx.Slider(self.panel_4, self.frameSliderId , 0, 0, 10)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: objectAnimationFrame.__set_properties
        self.SetTitle("frame_3")
        self.frameSlider.SetSize((250, 15))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: objectAnimationFrame.__do_layout
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_11 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_11.Add(self.button_3, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_11.Add(self.frameSlider, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_10.Add(sizer_11, 1, wx.EXPAND, 0)
        sizer_9.Add(sizer_10, 1, wx.ALL|wx.EXPAND, 7)
        self.panel_4.SetAutoLayout(1)
        self.panel_4.SetSizer(sizer_9)
        sizer_9.Fit(self.panel_4)
        sizer_9.SetSizeHints(self.panel_4)
        sizer_6.Add(self.panel_4, 1, wx.EXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_6)
        sizer_6.Fit(self)
        sizer_6.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class objectAnimationFrame



#!/usr/bin/env python
# generated by wxGlade 0.2.1cvs on Sun Jan 26 01:49:36 2003

from wxPython.wx import *

class graphEditorFrame(wxFrame):
    def __init__(self, *args, **kwds):
	# this class gets passed in as keyword argument (neat huh?)
	wxpcCanvas = kwds['wxpcCanvas']
	# I have to delete it from the keywords, because some of the wrapped
	# code doesn't like it
	del kwds['wxpcCanvas']
        # begin wxGlade: graphEditorFrame.__init__
        kwds["style"] = wxDEFAULT_FRAME_STYLE
        wxFrame.__init__(self, *args, **kwds)
        self.mainPanel = wxPanel(self, -1)
        
        # Menu Bar
        self.frame_1_menubar = wxMenuBar()
        self.SetMenuBar(self.frame_1_menubar)
        self.fileNewId  =  wxNewId()
        self.fileOpenId  =  wxNewId()
        self.fileOpenSegmentId  =  wxNewId()
        self.fileSaveId  =  wxNewId()
        self.fileSaveSelectedId  =  wxNewId()
        self.fileExportAsDOTId  =  wxNewId()
        self.fileExportSelectedAsDOTId  =  wxNewId()
        self.fileExitId  =  wxNewId()
        self.helpShowHelpId  =  wxNewId()
        wxglade_tmp_menu = wxMenu()
        wxglade_tmp_menu.Append(self.fileNewId , "&New\tCtrl-N", "Create new network.", wxITEM_NORMAL)
        wxglade_tmp_menu.Append(self.fileOpenId , "&Open\tCtrl-O", "Open and load existing network.", wxITEM_NORMAL)
        wxglade_tmp_menu.Append(self.fileOpenSegmentId , "Open as Se&gment\tCtrl-G", "Open a DeVIDE network as a segment in the copy buffer.", wxITEM_NORMAL)
        wxglade_tmp_menu.Append(self.fileSaveId , "&Save\tCtrl-S", "Save the current network.", wxITEM_NORMAL)
        wxglade_tmp_menu.Append(self.fileSaveSelectedId , "Save se&lected Glyphs\tCtrl-L", "Save the selected glyphs as a network.", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(self.fileExportAsDOTId , "&Export as DOT file\tCtrl-E", "Export the current network as a GraphViz DOT file.", wxITEM_NORMAL)
        wxglade_tmp_menu.Append(self.fileExportSelectedAsDOTId , "Export selection as DOT file", "Export the selected glyphs as a GraphViz DOT file.", wxITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(self.fileExitId , "E&xit\tCtrl-Q", "Exit DeVIDE!", wxITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&File")
        self.editMenu = wxMenu()
        self.frame_1_menubar.Append(self.editMenu, "&Edit")
        wxglade_tmp_menu = wxMenu()
        wxglade_tmp_menu.Append(self.helpShowHelpId , "Show &Help\tF1", "", wxITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&Help")
        # Menu Bar end
        self.frame_1_statusbar = self.CreateStatusBar(1)
        self.moduleCatsListCtrlId  =  wxNewId()
        self.moduleCatsListCtrl = wxListCtrl(self.mainPanel, self.moduleCatsListCtrlId , style=wxLC_REPORT|wxSUNKEN_BORDER)
        self.modulesListCtrlId  =  wxNewId()
        self.modulesListCtrl = wxListCtrl(self.mainPanel, self.modulesListCtrlId , style=wxLC_REPORT|wxLC_SINGLE_SEL|wxSUNKEN_BORDER)
        self.rescanButtonId  =  wxNewId()
        self.rescanButton = wxButton(self.mainPanel, self.rescanButtonId , "Rescan")
        self.canvas = wxpcCanvas(self.mainPanel, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: graphEditorFrame.__set_properties
        self.SetTitle("DeVIDE Graph Editor")
        self.frame_1_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_1_statusbar_fields = ["Welcome to the DeVIDE Graph Editor"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        self.canvas.SetSize((648, 480))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: graphEditorFrame.__do_layout
        sizer_1 = wxBoxSizer(wxVERTICAL)
        sizer_5 = wxBoxSizer(wxVERTICAL)
        sizer_6 = wxBoxSizer(wxVERTICAL)
        sizer_2 = wxBoxSizer(wxHORIZONTAL)
        sizer_8 = wxBoxSizer(wxVERTICAL)
        sizer_7 = wxBoxSizer(wxVERTICAL)
        sizer_7.Add(self.moduleCatsListCtrl, 2, wxBOTTOM|wxEXPAND, 7)
        sizer_7.Add(self.modulesListCtrl, 3, wxEXPAND, 0)
        sizer_7.Add(self.rescanButton, 0, wxTOP|wxBOTTOM|wxALIGN_CENTER_HORIZONTAL, 7)
        sizer_2.Add(sizer_7, 2, wxRIGHT|wxEXPAND, 7)
        sizer_8.Add(self.canvas, 1, wxEXPAND, 0)
        sizer_2.Add(sizer_8, 9, wxEXPAND, 0)
        sizer_6.Add(sizer_2, 1, wxEXPAND, 0)
        sizer_5.Add(sizer_6, 1, wxALL|wxEXPAND, 7)
        self.mainPanel.SetAutoLayout(1)
        self.mainPanel.SetSizer(sizer_5)
        sizer_5.Fit(self.mainPanel)
        sizer_5.SetSizeHints(self.mainPanel)
        sizer_1.Add(self.mainPanel, 1, wxEXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class graphEditorFrame



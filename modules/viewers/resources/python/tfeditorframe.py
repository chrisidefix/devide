#!/usr/bin/env python
# -*- coding: iso-8859-1 -*-
# generated by wxGlade 0.6.3 on Tue Jul 22 17:56:06 2008

import wx

# begin wxGlade: extracode
from external import transfer_function_widget
reload(transfer_function_widget)
TransferFunctionWidget = transfer_function_widget.TransferFunctionWidget

from external import transfer_function_widget
reload(transfer_function_widget)
TransferFunctionWidget = transfer_function_widget.TransferFunctionWidget

# end wxGlade



class TFEditorFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: TFEditorFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.view_frame_panel = wx.Panel(self, -1)
        self.tf_widget = TransferFunctionWidget(self.view_frame_panel, -1)
        self.label_4 = wx.StaticText(self.view_frame_panel, -1, "Selected vertex Scalar:")
        self.cur_scalar_text = wx.TextCtrl(self.view_frame_panel, -1, "")
        self.colour_button = wx.Button(self.view_frame_panel, -1, "Colour:")
        self.cur_col_text = wx.TextCtrl(self.view_frame_panel, -1, "")
        self.label_5 = wx.StaticText(self.view_frame_panel, -1, "Opacity:")
        self.cur_opacity_text = wx.TextCtrl(self.view_frame_panel, -1, "")
        self.delete_button = wx.Button(self.view_frame_panel, -1, "Delete")
        self.auto_range_button = wx.Button(self.view_frame_panel, -1, "Auto Range")
        self.label_1 = wx.StaticText(self.view_frame_panel, -1, "Scalar MIN")
        self.scalar_min_text = wx.TextCtrl(self.view_frame_panel, -1, "")
        self.label_2 = wx.StaticText(self.view_frame_panel, -1, "MAX")
        self.scalar_max_text = wx.TextCtrl(self.view_frame_panel, -1, "")
        self.apply_range_button = wx.Button(self.view_frame_panel, -1, "Apply Range")
        self.label_3 = wx.StaticText(self.view_frame_panel, -1, "Preset:")
        self.preset_choice = wx.Choice(self.view_frame_panel, -1, choices=["Dummy"])
        self.load_preset_button = wx.Button(self.view_frame_panel, -1, "Load")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: TFEditorFrame.__set_properties
        self.SetTitle("frame_2")
        self.cur_scalar_text.SetMinSize((50, -1))
        self.colour_button.SetBackgroundColour(wx.Colour(0, 127, 255))
        self.cur_col_text.SetMinSize((75, -1))
        self.cur_opacity_text.SetMinSize((50, -1))
        self.auto_range_button.SetToolTipString("Determine scalar range from input data.")
        self.preset_choice.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TFEditorFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        opacity_static_sizer = wx.BoxSizer(wx.VERTICAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3.Add((400, 0), 0, 0, 0)
        sizer_4.Add(self.tf_widget, 1, wx.EXPAND, 0)
        sizer_4.Add((0, 200), 0, 0, 0)
        opacity_static_sizer.Add(sizer_4, 1, wx.ALL|wx.EXPAND, 7)
        sizer_7.Add(self.label_4, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_7.Add(self.cur_scalar_text, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_7.Add(self.colour_button, 0, wx.RIGHT, 4)
        sizer_7.Add(self.cur_col_text, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_7.Add(self.label_5, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_7.Add(self.cur_opacity_text, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_7.Add(self.delete_button, 0, 0, 0)
        opacity_static_sizer.Add(sizer_7, 0, wx.LEFT|wx.RIGHT|wx.BOTTOM|wx.EXPAND, 7)
        sizer_5.Add(self.auto_range_button, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_5.Add(self.label_1, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_5.Add(self.scalar_min_text, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_5.Add(self.label_2, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 3)
        sizer_5.Add(self.scalar_max_text, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_5.Add(self.apply_range_button, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        opacity_static_sizer.Add(sizer_5, 0, wx.LEFT|wx.RIGHT|wx.BOTTOM|wx.EXPAND, 7)
        sizer_6.Add(self.label_3, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_6.Add(self.preset_choice, 1, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_6.Add(self.load_preset_button, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        opacity_static_sizer.Add(sizer_6, 0, wx.LEFT|wx.RIGHT|wx.BOTTOM|wx.EXPAND, 7)
        sizer_3.Add(opacity_static_sizer, 1, wx.EXPAND, 7)
        sizer_2.Add(sizer_3, 1, wx.ALL|wx.EXPAND, 7)
        self.view_frame_panel.SetSizer(sizer_2)
        sizer_1.Add(self.view_frame_panel, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade

# end of class TFEditorFrame


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame = TFEditorFrame(None, -1, "")
    app.SetTopWindow(frame)
    frame.Show()
    app.MainLoop()

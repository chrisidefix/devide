#!/usr/bin/env python
# -*- coding: ISO-8859-1 -*-
# generated by wxGlade 0.3.5.1 on Fri Jun 03 23:37:45 2005

import wx

class mainFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: mainFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        self.sizer_4_staticbox = wx.StaticBox(self.panel_1, -1, "Message log")
        
        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        self.SetMenuBar(self.frame_1_menubar)
        self.fileExitId = wx.NewId()
        self.windowGraphEditorId = wx.NewId()
        self.windowPythonShellId = wx.NewId()
        self.windowMinimiseChildrenId = wx.NewId()
        self.windowRestoreChildrenId = wx.NewId()
        self.testingAllTestsId = wx.NewId()
        self.helpContentsId = wx.NewId()
        self.helpAboutId = wx.NewId()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(self.fileExitId, "E&xit", "Exit DSCAS", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(self.windowGraphEditorId, "&Graph Editor", "Open up the graph editor window", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(self.windowPythonShellId, "&Python Shell", "Show the Python Shell interface", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(self.windowMinimiseChildrenId, "&Minimise children", "Minimise (iconise) all the child windows of the main window", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(self.windowRestoreChildrenId, "&Restore children", "Restore all child windows of the main window.", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&Window")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(self.testingAllTestsId, "&All Tests", "Run all test suites.", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&Testing")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(self.helpContentsId, "&Contents\tF1", "Show the main help contents", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(self.helpAboutId, "&About", "Get information about DeVIDE", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, "&Help")
        # Menu Bar end
        self.frame_1_statusbar = self.CreateStatusBar(1, 0)
        self.progressText = wx.StaticText(self.panel_1, -1, "This is quite a long progress message so that even the longest of messages eek.")
        self.progressGauge = wx.Gauge(self.panel_1, -1, 100)
        self.enableExecutionCheckBox = wx.CheckBox(self.panel_1, -1, "Enable execution")
        self.progressRaiseCheckBox = wx.CheckBox(self.panel_1, -1, "Raise this window when the progress is updated.")
        self.blockExecutionCheckBox = wx.CheckBox(self.panel_1, -1, "Attempt to block / interrupt network execution - CAUTION.")
        self.messageLogTextCtrl = wx.TextCtrl(self.panel_1, -1, "", style=wx.TE_MULTILINE|wx.TE_READONLY|wx.HSCROLL)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: mainFrame.__set_properties
        self.SetTitle("DeVIDE main window")
        self.frame_1_statusbar.SetStatusWidths([-1])
        # statusbar fields
        frame_1_statusbar_fields = ["Welcome to DeVIDE"]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        self.progressText.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.progressGauge.SetBackgroundColour(wx.Colour(50, 50, 204))
        self.enableExecutionCheckBox.SetToolTipString("Check this box so that networks execute automatically.  Uncheck it when you don't want networks to execute automatically.")
        self.progressRaiseCheckBox.SetToolTipString("Each time the progress is updated, this window will be brought to the front.  If you do not wish this behaviour, uncheck this box.")
        self.progressRaiseCheckBox.SetValue(1)
        self.blockExecutionCheckBox.SetToolTipString("This will stop or shorten the execution of a DeVIDE network.  Uncheck to go back to the normal behaviour.  Sometimes it may be necessary to cycle this twice if the network starts up again.")
        self.messageLogTextCtrl.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: mainFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.HORIZONTAL)
        sizer_2.Add(self.progressText, 0, 0, 4)
        sizer_2.Add(self.progressGauge, 0, wx.EXPAND, 5)
        sizer_2.Add(self.enableExecutionCheckBox, 0, wx.TOP, 7)
        sizer_2.Add(self.progressRaiseCheckBox, 0, wx.TOP|wx.EXPAND|wx.ALIGN_CENTER_VERTICAL, 7)
        sizer_2.Add(self.blockExecutionCheckBox, 0, wx.TOP, 7)
        sizer_4.Add(self.messageLogTextCtrl, 1, wx.ALL|wx.EXPAND, 7)
        sizer_4.Add((0, 150), 0, 0, 0)
        sizer_2.Add(sizer_4, 1, wx.TOP|wx.EXPAND, 7)
        sizer_2.Add((600, 0), 0, 0, 0)
        sizer_3.Add(sizer_2, 1, wx.ALL|wx.EXPAND, 7)
        self.panel_1.SetAutoLayout(True)
        self.panel_1.SetSizer(sizer_3)
        sizer_3.Fit(self.panel_1)
        sizer_3.SetSizeHints(self.panel_1)
        sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class mainFrame


